services:
  db-service:
    image: amazon/dynamodb-local:latest
    container_name: db-service
    networks: # 지정 네트워크에 연결
      - reminder-service-network
    ports: # 외부에서 접근할 수 있도록 포트 할당
      - "${DB_PORT}:8000" # (호스트):(컨테이너)

  notification-microservice:
    build:
      context: . # 현재 디렉토리의 Dockerfile로 빌드
      dockerfile: Dockerfile.notification # notification Dockerfile 사용
    container_name: notification-microservice
    networks:
      - reminder-service-network
    env_file:
      - notification/.env
      - notification/.env.local
    environment:
      - DB_HOST=db-service
      - DB_PORT=8000
    ports:
      - "${PORT}:${PORT}"
      - "${MS_PORT}:${MS_PORT}"

  worker-microservice:
    build:
      context: .
      dockerfile: Dockerfile.worker # worker Dockerfile 사용
    container_name: worker-microservice
    networks:
      - reminder-service-network
    env_file:
      - worker/.env
      - worker/.env.local
    environment:
      - MS_HOST=notification-microservice # notification-microservice 컨테이너의 할당 IP
      - MS_PORT=${MS_PORT}
      - WORKER_PORT=${WORKER_PORT}
    depends_on:
      - notification-microservice
    ports:
      - "${WORKER_PORT}:${WORKER_PORT}"

networks:
  reminder-service-network:
    driver: bridge
